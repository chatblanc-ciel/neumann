# dockerエンジンの対象バージョンに合わせる
version: '3'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      TZ: Asia/Tokyo
    ports:
      - "15432:$MYSQL_PORT"
    # ローカル側が3306だとtableplus等のクライアントツールから接続が出来ないため
    # stopでコンテナを落とすならDBのデータは消えないそうなのであえて永続化しない

  backend:
    environment:
      FRONT_ORIGINS: "$BASE_DOMAIN:$FRONT_PORT"
      FRONT_ORIGINS_PROXY: "$BASE_DOMAIN:$PROXY_PORT"
      ALLOW_HOST_PORT: "$ALLOW_HOST:$BACK_PORT"
      GOOGLE_CLIENT_ID: $GOOGLE_CLIENT_ID
      GOOGLE_CLIENT_SECRET: $GOOGLE_CLIENT_SECRET
      FRONT_REDIRECT_URI: "$BASE_URL:$FRONT_PORT"
      PROXY_MODE: $PROXY_MODE
      FRONT_REDIRECT_URI_PROXY: "$BASE_URL:$PROXY_PORT"
      STATE_SECRET: $STATE_SECRET
      BASE_URL: $BASE_URL
      CLOUDFLARE_R2_ACCESS_KEY_ID: $CLOUDFLARE_R2_ACCESS_KEY_ID
      CLOUDFLARE_R2_SECRET_ACCESS_KEY: $CLOUDFLARE_R2_SECRET_ACCESS_KEY
      CLOUDFLARE_R2_BUCKET: $CLOUDFLARE_R2_BUCKET
      CLOUDFLARE_R2_ENDPOINT: $CLOUDFLARE_R2_ENDPOINT
      BIZRANK_BUCKET_DOMAIN: $BIZRANK_BUCKET_DOMAIN
      FIRESTORE_PROJECT: $FIRESTORE_PROJECT
      FIRESTORE_CREDENTIALS: $FIRESTORE_CREDENTIALS
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend-rails-api
    networks:
      - default
      - interconnect
    ports:
      - "$BACK_PORT:$BACK_PORT"
    working_dir: /backend
    # こいつのおかげでctr+cした際にrails serverを切ってからコンテナを終了してくれる
    # 137のエラーを解決してくれている
    # 初回起動時のみだった。
    stop_signal: SIGINT
    depends_on:
      - db
    volumes:
      - ./backend:/backend
    # docker run -iを意味する
    stdin_open: true
    # -tを意味する
    tty: true
networks:
  interconnect:
    name: interconnect
    external: true